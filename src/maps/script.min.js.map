{"version":3,"sources":["form.js","modal.js","script.js"],"names":["$","on","event","stopPropagation","preventDefault","form","this","data","FormData","val","attr","append","ajax","url","type","cache","dataType","processData","contentType","xhr","myXhr","ajaxSettings","upload","addEventListener","e","lengthComputable","percentage","loaded","total","toFixed","html","error","jqXHR","textStatus","complete","console","log","reset","nav","document","getElementById","body","querySelector","openBtn","querySelectorAll","modalOverlay","modalWindow","closeBtn","submitBtn","scrollWidth","window","innerWidth","clientWidth","forEach","el","style","padding","classList","add","target","remove","burger","menu","documentElement","menuLinks","aboutText","aboutImage","priceItem","Array","from","gallery","reviews","height","Math","max","clientHeight","offsetHeight","scrollHeight","activeMenu","i","length","section","dataset","goto","getBoundingClientRect","top","pageYOffset","onMenuClick","menuLink","gotoBlockValue","contains","scrollTo","behavior","push","unshift","toggle","scrollY","innerHeight","index","firstElementChild"],"mappings":"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","file":"../scripts/script.min.js","sourcesContent":["$('.telegram-form').on('submit', function (event) {\n\n    event.stopPropagation();\n    event.preventDefault();\n\n    let form = this,\n        submit = $('.submit', form),\n        data = new FormData(),\n        files = $('input[type=file]')\n\n\n    $('.submit', form).val('Отправка...');\n    $('input, textarea', form).attr('disabled','');\n\n    data.append( 'name', \t\t$('[name=\"name\"]', form).val() );\n    data.append( 'phone', \t\t$('[name=\"phone\"]', form).val() );\n    \n    $.ajax({\n        url: 'ajax.php',\n        type: 'POST',\n        data: data,\n        cache: false,\n        dataType: 'json',\n        processData: false,\n        contentType: false,\n        xhr: function() {\n            let myXhr = $.ajaxSettings.xhr();\n\n            if ( myXhr.upload ) {\n                myXhr.upload.addEventListener( 'progress', function(e) {\n                    if ( e.lengthComputable ) {\n                        let percentage = ( e.loaded / e.total ) * 100;\n                            percentage = percentage.toFixed(0);\n                        $('.submit', form)\n                            .html( percentage + '%' );\n                    }\n                }, false );\n            }\n\n            return myXhr;\n        },\n        error: function( jqXHR, textStatus ) {\n            // Тут выводим ошибку\n        },\n        complete: function() {\n            // Тут можем что-то делать ПОСЛЕ успешной отправки формы\n            console.log('Complete')\n            form.reset() \n        }\n    });\n\n    return false;\n});","const nav = document.getElementById(\"header__nav\") /** Полоса меню */\nconst body = document.querySelector(\"body\") /** Получаем body для блокировки прокрутки */\n\nconst openBtn = document.querySelectorAll(\".open-modal\"); // Массив кнопок, по которым открываем модальное окно\nconst modalOverlay = document.getElementById(\"modal__overlay\"); // Затемнение фона, подложка под модальное окно\nconst modalWindow = document.getElementById(\"modal__window\"); // Модальное окно\nconst closeBtn = document.getElementById(\"closeBtn\"); // Кнопка закрытия модального окна\nconst submitBtn = document.getElementById(\"submitBtn\"); // Кнопка отправки формы\nconst scrollWidth = window.innerWidth - document.body.clientWidth; // Получаем ширину полосы прокрутки\n\n/** Open modal window by button on the page */\nopenBtn.forEach((el) => {\n    el.addEventListener(\"click\", () => {\n        nav.style.padding = `0 ${scrollWidth}px 0 0`; // Добавляем паддинг справа в размере ширины полосы прокрутки для панели навигации\n        body.style.padding = `0 ${scrollWidth}px 0 0`; // Добавляем паддинг справа в размере ширины полосы прокрутки для всей страницы\n        modalOverlay.classList.add(\"_active\"); // Слой с затемнением экрана открываем\n        modalWindow.classList.add(\"_active\"); // Открываем модальное окно\n        body.classList.add(\"_lock\"); // Блокируем прокрутку страницы при окрытии модального окна\n    });\n});\n\n/** Close modal window by X button */\n/** Close modal window by submit button */\n/** Close modal window, if click outside modal window */\n\ndocument.addEventListener(\"click\", (el) => {\n    if (\n        el.target === closeBtn ||\n        el.target === submitBtn ||\n        el.target === modalOverlay\n    ) {\n        nav.style.padding = `0`;\n        body.style.padding = `0`;\n        modalOverlay.classList.remove(\"_active\");\n        modalWindow.classList.remove(\"_active\");\n        body.classList.remove(\"_lock\");\n    }\n});\n","window.addEventListener(\"load\", () => {\n    const burger =\n        document.getElementById(\"header__burger\") /** Кнопка бургер */\n    const menu = document.getElementById(\"header__menu\") /** Меню сайта */\n    const nav = document.getElementById(\"header__nav\") /** Полоса меню */\n    const body =\n        document.querySelector(\n            \"body\",\n        ) /** Получаем body для блокировки прокрутки */\n\n    const html =\n        document.documentElement /** Получаем html для определения высоты всей страницы */\n    const menuLinks = document.querySelectorAll(\n        \".header__link[data-goto]\",\n    ) /** Находим все пункты меню по data-goto */\n\n    /** Отбираем элементы, для которых будет применяться анимация при прокрутке страницы */\n    const aboutText = document.getElementById(\"about__text\")\n    const aboutImage = document.getElementById(\"about__image\")\n    const priceItem = Array.from(document.querySelectorAll(\".price-item\"))\n\n    const gallery = Array.from(\n        document.querySelectorAll(\n            \".section__content_gallery img\",\n        ) /* Получаем массив картинок в галерее */,\n    )\n\n    const reviews = Array.from(\n        document.querySelectorAll(\n            \".section__content_reviews .reviews-item\",\n        ) /* Получаем массив отзывов */,\n    )\n\n    /** Подсветка просматриваемого пункта меню */\n\n    /** Получаем высоту страницы */\n    const height = Math.max(\n        body.clientHeight,\n        body.offsetHeight,\n        body.scrollHeight,\n        html.offsetHeight,\n        html.clientHeight,\n    )\n\n    /** Создаём массив с координатой начала каждого блока */\n    const activeMenu = []\n    for (let i = 0; i < menuLinks.length; i++) {\n        const section = document.querySelector(menuLinks[i].dataset.goto)\n\n        activeMenu[i] =\n            section.getBoundingClientRect().top +\n            pageYOffset -\n            document.querySelector(\".header__nav\").offsetHeight -\n            100\n    }\n\n    /** Добавляем последним элементом в этот массив, это высота страницы */\n    activeMenu.push(height)\n    /** И нулевую позицию для подсвечивания первого пункта меню */\n    activeMenu.unshift(0)\n\n    /* Работа с бургер-меню на маленьких размерах экрана */\n    burger.addEventListener(\"click\", () => {\n        /** Вешаем событие по нажатию на меню бургер */\n        burger.classList.toggle(\n            \"_active\",\n        ) /** Анимируем кнопку бургера в крестик */\n        menu.classList.toggle(\"_active\") /** Открываем меню сайта */\n        nav.classList.toggle(\n            \"_active\",\n        ) /** Применяем непрозрачность к полосе меню */\n        if (menu.classList.contains(\"_active\")) {\n            /** Если меню открыто */\n            body.classList.add(\n                \"_lock\",\n            ) /** Блокируем прокрутку body через overflow: hidden */\n        } else {\n            body.classList.remove(\n                \"_lock\",\n            ) /** Иначе разблокируем прокрутку страницы */\n        }\n    })\n\n    /* Меняем цвет навигационной панели при проскроливании эрана */\n    document.addEventListener(\"scroll\", () => {\n        if (window.scrollY >= 100) {\n            /** Если прокрутили больше 100px */\n            nav.classList.add(\"_scroll\")\n\n            /** Так же определяем, какой пункт меню в данный момент должен быть активным */\n            for (let i = 1; i < activeMenu.length - 1; i++) {\n                if (\n                    /** Если прокрутили до пункта меню и ещё не дошли до следующего пункта меню */\n                    window.pageYOffset >= activeMenu[i] &&\n                    window.pageYOffset < activeMenu[i + 1]\n                ) {\n                    menuLinks.forEach((el) => {\n                        /** Удаляем у всех пунктов меню подсветку */\n                        el.classList.remove(\"_active\")\n                    })\n                    menuLinks[i - 1].classList.add(\n                        \"_active\",\n                    ) /** Добавляем подсветку активному пункту меню */\n                } else if (\n                    /** Если это последний пункт меню */\n                    window.pageYOffset >=\n                        activeMenu[activeMenu.length - 1] -\n                            window.innerHeight /** Если прокрутили до конца страницы минус высота окна браузера */ ||\n                    window.pageYOffset >= height - window.innerHeight\n                ) {\n                    /** Удаляем у всех пунктов меню подсветку */\n                    menuLinks.forEach((el) => {\n                        el.classList.remove(\"_active\")\n                    })\n                    menuLinks[menuLinks.length - 1].classList.add(\"_active\")\n                }\n            }\n        } else {\n            /** Иначе убираем подсветку у всех пунктов меню, если прокрутка меньше высоты главного меню 100px */\n            nav.classList.remove(\"_scroll\")\n            menuLinks.forEach((el) => {\n                el.classList.remove(\"_active\")\n            })\n        }\n\n        /** Добавление анимации при прокручивании до секции на страницы */\n        menuLinks.forEach((el, index) => {\n            if (el.dataset.goto === \"#section_about\") {\n                if (\n                    /** Если блок в зоне видимости */\n                    activeMenu[index + 1] <= window.scrollY + 350 &&\n                    activeMenu[index + 2] >= window.scrollY + 50\n                ) {\n                    /** Применяем анимацию */\n                    aboutText.classList.add(\"_active\")\n                    aboutImage.firstElementChild.classList.add(\"_active\")\n                } else {\n                    /** Иначе удаляем анимацию */\n                    aboutText.classList.remove(\"_active\")\n                    aboutImage.firstElementChild.classList.remove(\"_active\")\n                }\n            } else if (el.dataset.goto === \"#section_price\") {\n                if (\n                    /** Если блок в зоне видимости */\n                    activeMenu[3] <= window.scrollY + 350 &&\n                    activeMenu[4] >= window.scrollY + 100\n                ) {\n                    /** Применяем анимацию */\n                    priceItem.forEach((el) => {\n                        el.classList.add(\"_active\")\n                    })\n                } else {\n                    /** Иначе удаляем анимацию */\n                    priceItem.forEach((el) => {\n                        el.classList.remove(\"_active\")\n                    })\n                }\n            }\n        })\n    })\n\n    /* Убираем половину картинок в галерее и половину карточек в отзывах при размере экрана менее 600px */\n    document.addEventListener(\"DOMContentLoaded\", () => {\n        if (window.innerWidth < 600) {\n            gallery.forEach((el, index) => {\n                if (index % 2 !== 0) {\n                    el.classList.add(\"_hidden\")\n                }\n            })\n            reviews.forEach((el, index) => {\n                if (index % 2 !== 0) {\n                    el.classList.add(\"_hidden\")\n                }\n            })\n        }\n    })\n\n    if (menuLinks.length > 0) {\n        /** Если в меню есть ссылки */\n        menuLinks.forEach((el) => {\n            /** То вешаем обработчик на все пункты меню */\n            el.addEventListener(\"click\", onMenuClick)\n        })\n    }\n\n    /* Плавная прокрутка до нужного пункта меню */\n    function onMenuClick(e) {\n        const menuLink = e.target\n\n        if (\n            menuLink.dataset\n                .goto /** Если у данного пункта меню есть дата атрибут */ &&\n            document.querySelector(\n                menuLink.dataset.goto,\n            ) /** И есть такая секция на странице */\n        ) {\n            /** Тогда вычисляем координаты данной секции */\n            const gotoBlock = document.querySelector(menuLink.dataset.goto)\n            const gotoBlockValue =\n                gotoBlock.getBoundingClientRect().top +\n                pageYOffset -\n                document.querySelector(\".header__nav\").offsetHeight\n\n            /* Если меню открыто, то закрываем его и убираем все активные классы */\n            if (menu.classList.contains(\"_active\")) {\n                menu.classList.remove(\"_active\")\n                burger.classList.remove(\"_active\")\n                nav.classList.remove(\"_active\")\n                body.classList.remove(\"_lock\")\n            }\n\n            window.scrollTo({\n                /* Скролим экран на нужную позицию */\n                top: gotoBlockValue /* От верха страницы полученное колличество пикселей */,\n                behavior: \"smooth\" /* Плавная прокрутка */,\n            })\n            e.preventDefault() /* Отменяем стандартное поведение при нажатии на ссылку */\n        }\n    }\n})\n"]}